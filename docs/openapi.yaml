openapi: 3.0.0
info:
  title: Chat Messenger API
  description: API documentation for Chat Messenger
  version: 1.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        "200":
          description: ""
  /auth/register:
    post:
      operationId: AuthController_register
      summary: Register a new user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterInput"
      responses:
        "201":
          description: User registered successfully
        "400":
          description: Bad request, invalid input
  /auth/login:
    post:
      operationId: AuthController_login
      summary: User login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginInput"
      responses:
        "201":
          description: Login successful
        "401":
          description: Unauthorized, invalid credentials
  /messages:
    post:
      operationId: MessagesController_create
      summary: Create a new message
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMessageDto"
      responses:
        "201":
          description: Message created successfully
        "400":
          description: Invalid input data
      tags: &a1
        - Messages
      security: &a2
        - bearer: []
    get:
      operationId: MessagesController_findAll
      summary: Retrieve all messages for the user
      parameters: []
      responses:
        "200":
          description: Messages retrieved successfully
        "403":
          description: Forbidden
      tags: *a1
      security: *a2
components:
  schemas:
    RegisterInput:
      type: object
      properties:
        username:
          type: string
          description: The username of the user
          example: johndoe
        password:
          type: string
          description: The password of the user. Must be at least 8 characters long.
          example: strongPassword123
          minLength: 8
      required:
        - username
        - password
    LoginInput:
      type: object
      properties:
        username:
          type: string
          example: johndoe
          description: The username of the user
        password:
          type: string
          example: strongPassword123
          description: The password of the user
      required:
        - username
        - password
    CreateMessageDto:
      type: object
      properties: {}
tags: []
servers: []
